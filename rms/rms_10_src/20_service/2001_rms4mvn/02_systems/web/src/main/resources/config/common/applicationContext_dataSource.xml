<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:flex="http://www.springframework.org/schema/flex" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                        http://www.springframework.org/schema/context
           				http://www.springframework.org/schema/context/spring-context-2.5.xsd
           				http://www.springframework.org/schema/flex
						http://www.springframework.org/schema/flex/spring-flex-1.5.xsd
           				http://www.springframework.org/schema/cache 
           				http://www.springframework.org/schema/cache/spring-cache.xsd
           				http://www.directwebremoting.org/schema/spring-dwr  
          				http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd">
	<!-- 配置事务特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<aop:config>
		<aop:pointcut id="txService"
			expression="execution(* com.neoye.rms..srv..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txService" />
	</aop:config>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceFilePostgre" />
	</bean>

	<bean id="dataSourceFilePostgre" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${datasource.postgre.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.postgre.url}" />
		<property name="user">
			<value>${datasource.postgre.username}</value>
		</property>
		<property name="password">
			<value>${datasource.postgre.password}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.postgre.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.postgre.maxPoolSize}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.postgre.initialPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.postgre.maxIdleTime}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.postgre.acquireIncrement}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.postgre.maxStatements}</value>
		</property>
		<property name="maxStatementsPerConnection">
			<value>${c3p0.postgre.maxStatementsPerConnection}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.postgre.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${c3p0.postgre.acquireRetryAttempts}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${c3p0.postgre.breakAfterAcquireFailure}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${c3p0.postgre.testConnectionOnCheckout}</value>
		</property>
	</bean>
	
	
	<!-- spring myBatis Begin-->
	<!-- spring和myBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceFilePostgre" />
		<property name="plugins">
			<list>
				<bean class="com.neoye.rms.domain.infrastructure.intercepts.MybatisSqlLogIncpt"/>
			</list>			
		</property>
		<!-- 自动 扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:config/rms/**/*.xml" />
		<property name="typeHandlersPackage">
			<value>com.neoye.rms.domain.infrastructure.base.typehandler</value>
		</property>
	</bean>
	

	<!-- 接口所在包名.Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neoye.rms.**.repo" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- spring myBatis End-->

	<!-- spring ibatis Begin-->
	<!-- spring整合ibatis框架 -->
<!-- 	<bean id="sqlMapClient4Uni" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> -->
<!-- 		<property name="configLocations" -->
<!-- 			value="classpath:/config/common/sqlMapConfig_postgresql.xml" /> -->
<!-- 		<property name="dataSource" ref="dataSourceFilePostgre" /> -->
<!-- 	</bean> -->
		<!-- spring整合ibatis框架  集成NP数据源-->
<!-- 	<bean id="sqlMapClient4NP" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> -->
<!-- 		<property name="configLocations" -->
<!-- 			value="classpath:/config/common/sqlMapConfig_np.xml" /> -->
<!-- 		<property name="dataSource" ref="dataSource4NP" /> -->
<!-- 	</bean> -->
	<!-- spring ibatis End-->

</beans>